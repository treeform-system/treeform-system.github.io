<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Internals on TreeForm Systems</title>
    <link>https://localhost/internals/</link>
    <description>Recent content in Internals on TreeForm Systems</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Oct 2024 19:28:51 -0400</lastBuildDate>
    <atom:link href="https://localhost/internals/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is this?</title>
      <link>https://localhost/internals/aboutinternals/</link>
      <pubDate>Mon, 07 Oct 2024 19:28:51 -0400</pubDate>
      <guid>https://localhost/internals/aboutinternals/</guid>
      <description>The following pages are meant to be a general overview of the internals in RootDB.&#xA;RootDB is currently in development and therefore the documentation surrounding it is bound to change and evolve over time. So why am I writing all this? Having a proper documentation for the decisions made for all the structures under the hood is a good thing to have to look back on and think through the issues RootDB is aiming to solve, as well as being helpful for those curious what kind of stuff RootDB is capable of or those developing their own databases.</description>
    </item>
    <item>
      <title>Indexes</title>
      <link>https://localhost/internals/indexes/</link>
      <pubDate>Mon, 07 Oct 2024 19:22:01 -0400</pubDate>
      <guid>https://localhost/internals/indexes/</guid>
      <description>RootDB is currently in development and therefore this documentation may be a bit out of date for the actual algorithms and structures used, but for the most part will be up to date with the main branch of RootDB. What even are Indexes? There are many articles and videos about what indexes are, some good, some bad. So I will not go into the science or practicalities of what indexes do or benefits, but for the purposes of this page all you need to know is that an index is just a data structure that lets databases find where a specific row is being stored in the database.</description>
    </item>
    <item>
      <title>Wal</title>
      <link>https://localhost/internals/wal/</link>
      <pubDate>Mon, 07 Oct 2024 19:19:32 -0400</pubDate>
      <guid>https://localhost/internals/wal/</guid>
      <description>RootDB is currently in development and therefore this documentation may be a bit out of date for the actual algorithms and structures used, but for the most part will be up to date with the main branch of RootDB. What is a WAL? Databases must be durable and fast, and one way they maintain this is by having a WAL. A Write Ahead Log (WAL) is a file that all transactions modifying data write to, and once they commit the transaction, this change eventually gets merged with the data files.</description>
    </item>
    <item>
      <title>Bufferpool</title>
      <link>https://localhost/internals/bufferpool/</link>
      <pubDate>Mon, 07 Oct 2024 19:19:25 -0400</pubDate>
      <guid>https://localhost/internals/bufferpool/</guid>
      <description>RootDB is currently in development and therefore this documentation may be a bit out of date for the actual algorithms and structures used, but for the most part will be up to date with the main branch of RootDB. What is a bufferpool? A bufferpool is just another fancy data structure that lets you reuse blocks of memory. Why is this important? because reading from a file is expensive. It takes longer to read from your Hard Drive than it does to read from your RAM.</description>
    </item>
    <item>
      <title>Parser</title>
      <link>https://localhost/internals/parser/</link>
      <pubDate>Mon, 07 Oct 2024 19:19:16 -0400</pubDate>
      <guid>https://localhost/internals/parser/</guid>
      <description>RootDB is currently in development and therefore this documentation may be a bit out of date for the actual algorithms and structures used, but for the most part will be up to date with the main branch of RootDB. What is the Parser for? Every major relational database has their own variation of SQL, mine is no different. At the current moment it is compatible with MYSQL syntax for SQL and is trying to closely follow Ansi SQL syntax.</description>
    </item>
  </channel>
</rss>
